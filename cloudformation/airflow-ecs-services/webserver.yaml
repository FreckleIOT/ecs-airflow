AWSTemplateFormatVersion: '2010-09-09'

Description: Creates an ECS Service for the Airflow Webserver

Parameters:
  # Non-default Parameters
  EcsStackName:
    Type: String
    Description: Stack name of the ECS Cluster
  PostgresDbStackName:
    Type: String
    Description: Stack name of the Postgres database
  RedisStackName:
    Type: String
    Description: Stack name of Redis
  EcsTaskRole:
    Type: String
    Description: The ECS task role
  EcsAutoScaleRoleArn:
    Type: String
    Description: The ECS autoscaling role ARN
  HostedZoneId:
    Type: AWS::Route53::HostedZone::Id
    Description: The Route 53 Hosted Zone ID
  HostedZoneName:
    Type: String
    Description: The Route 53 Hosted Zone Name
  DNSPrefix:
    Type: String
    Description: |
      The prefix used in the Route 53 entry for the application. For non-production use the environment and AppName
      together; e.g. dev-airflow. For production just use AppName; e.g. airflow.
  AirflowDockerImage:
    Type: String
    Description: The Airflow Docker image
    MinLength: 1
    ConstraintDescription: Must be a valid docker image

  KmsDataKey:
    Type: String
    Description: >
      The KMS Data Key Ciphertext (Base64 encoded). If this is not provided the password parameters
      will be treated as plaintext.
    Default: ''
    NoEcho: true
  FernetKeyEnc:
    Type: String
    Description: Fernet Key for Airflow encrypted using the KMS key
    Default: ''
    NoEcho: true
  PostgresPasswordEnc:
    Type: String
    Description: Postgres database password encrypted using the KMS key
    NoEcho: true
  GoogleOAuthClientSecretEnc:
    Type: String
    Description: Encrypted Google OAuth Client Secret
  GoogleOAuthClientId:
    Type: String
    Description: Google OAuth Client ID
  GoogleOAuthCallback:
    Type: String
    Description: The OAuth callback route
    Default: '/oauth2callback'
  GoogleOAuthDomain:
    Type: String
    Description: The valid domain names (comma separated) allowed for login

  RedisDatabaseNumber:
    Type: Number
    Description: The database number for the Redis cluster
    MinValue: 0
    ConstraintDescription: Please specify a number >= 0
    Default: 0

  SMTPUser:
    Type: String
    Description: SMTP user name
    Default: ''
  SMTPPasswordEnc:
    Type: String
    Description: Encrypted SMTP password
    NoEcho: True
    Default: ''
  SMTPHost:
    Type: String
    Description: SMTP host
    Default: ''
  SMTPPort:
    Type: Number
    Description: SMTP port
    AllowedValues: [25, 465, 587]
    ConstraintDescription: Must be a valid SMTP port
    Default: 25
  SMTPStartTLS:
    Type: String
    Description: SMTP Start TLS
    AllowedValues: ['True', 'False']
    ConstraintDescription: "Must be either 'True' or 'False'"
    Default: 'True'
  SMTPSSL:
    Type: String
    Description: SMTP SSL
    AllowedValues: ['True', 'False']
    ConstraintDescription: "Must be either 'True' or 'False'"
    Default: 'False'
  SMTPFrom:
    Type: String
    Description: SMTP From Email
    AllowedPattern: '^([A-Za-z0-9._%+-]+@[A-Za-z0-9.-]+\.[A-Za-z]{2,6})?$'
    ConstraintDescription: Must be a valid email address. If using Amazon SES, it has to be a verified email address.
    Default: ''

  # Default Parameters (a.k.a constants)
  Priority:
    Type: Number
    Description: The priority to register with the Load Balancer
    Default: 101
  AppName:
    Type: String
    Description: Name of app. Should be the same as docker repository name.
    Default: 'airflow'
  AppContainerPort:
    Type: Number
    Description: Port the app runs on in the image
    Default: 8080
  AppMinCount:
    Type: Number
    Description: Min number of instances of the service to scale in to
    Default: 1
  AppMaxCount:
    Type: Number
    Description: Max number of instances of the service to scale out to
    Default: 3
  AppDesiredCount:
    Type: Number
    Description: Number of instances of the service to run
    Default: 2
  AutoScaleHighThreshold:
    Type: Number
    Description: Percentage of service CPU utilization that is considered high
    Default: 55
  AutoScaleLowThreshold:
    Type: Number
    Description: Percentage of service CPU utilization that is considered low
    Default: 15

  # Tags
  Organization:
    Type: String
    Description: Organization tag
    MinLength: 5
    ConstraintDescription: Must be a string of length >= 5
  Team:
    Type: String
    Description: Team tag
    MinLength: 5
    ConstraintDescription: Must be a string of length >= 5
  Environment:
    Type: String
    Description: Team tag
    AllowedValues: [dev, sandbox, prod, load, test]
    ConstraintDescription: Must be one of the available environment types
  Component:
    Type: String
    Description: Component tag
    MinLength: 3
    ConstraintDescription: Must be a string of length >= 3

Resources:
  DNSRecord:
    Type: AWS::Route53::RecordSet
    Properties:
      AliasTarget:
        HostedZoneId:
          Fn::ImportValue: !Sub '${EcsStackName}-LoadBalancerCanonicalHostedZoneID'
        DNSName:
          Fn::ImportValue: !Sub '${EcsStackName}-LoadBalancerDNSName'
      HostedZoneId: !Ref HostedZoneId
      SetIdentifier: !Ref AWS::StackName
      Weight: 50
      Name: !Sub '${DNSPrefix}.${HostedZoneName}'
      Type: A
  TargetGroup:
    Type: AWS::ElasticLoadBalancingV2::TargetGroup
    Properties:
      HealthCheckIntervalSeconds: 10
      HealthCheckProtocol: HTTP
      HealthCheckTimeoutSeconds: 5
      HealthCheckPath: '/health'
      HealthyThresholdCount: 2
      Matcher:
        HttpCode: 200-299
      Protocol: HTTP
      Port: 80
      TargetGroupAttributes:
        - Key: deregistration_delay.timeout_seconds
          Value: 300
      UnhealthyThresholdCount: 3
      VpcId:
        Fn::ImportValue: !Sub '${EcsStackName}-VpcId'
      Tags:
        - Key: Name
          Value: !Sub 'Airflow Target Group - ${AWS::StackName}'
        - Key: Organization
          Value: !Ref Organization
        - Key: Team
          Value: !Ref Team
        - Key: Environment
          Value: !Ref Environment
        - Key: Component
          Value: !Ref Component
  ListenerRule:
    Type: AWS::ElasticLoadBalancingV2::ListenerRule
    Properties:
      ListenerArn:
        Fn::ImportValue: !Sub '${EcsStackName}-Listener'
      Priority: !Ref Priority
      Conditions:
        - Field: host-header
          Values:
            - !Ref DNSRecord
      Actions:
        - TargetGroupArn: !Ref TargetGroup
          Type: forward
  TaskDefinition:
    Type: AWS::ECS::TaskDefinition
    Properties:
      Family: !Ref AWS::StackName
      TaskRoleArn: !Ref EcsTaskRole
      Volumes:
        - Name: dags
          Host:
            SourcePath:
              Fn::Join:
                - '/'
                - - Fn::ImportValue: !Sub '${EcsStackName}-AirflowDagS3BucketMountPath'
                  - dags
      ContainerDefinitions:
        - Name: !Ref AppName
          Image: !Ref AirflowDockerImage
          Command:
            - webserver
          Cpu: 512
          MemoryReservation: 1024
          Essential: true
          MountPoints:
            - SourceVolume: dags
              ContainerPath: /usr/local/airflow/dags
          LogConfiguration:
            LogDriver: awslogs
            Options:
              awslogs-group:
                Fn::ImportValue: !Sub '${EcsStackName}-CloudWatchLogGroup'
              awslogs-region: !Ref AWS::Region
              awslogs-stream-prefix: ecs-service
          PortMappings:
            # This might be an issue if multiple containers attempt to run on same ECS instance
            - ContainerPort: !Ref AppContainerPort
              HostPort: 0
          Environment:
            - Name: REGION
              Value: !Ref AWS::Region
            - Name: EXECUTOR
              Value: Celery
            - Name: LOAD_EX
              Value: n
            - Name: KMS_DATA_KEY
              Value: !Ref KmsDataKey
            - Name: FERNET_KEY_ENC
              Value: !Ref FernetKeyEnc
            - Name: AIRFLOW__WEBSERVER__BASE_URL
              Value: !Sub 'https://${DNSRecord}'
            - Name: AIRFLOW_HOME
              Value: /usr/local/airflow
            - Name: POSTGRES_HOST
              Value:
                Fn::ImportValue: !Sub '${PostgresDbStackName}-EndpointAddress'
            - Name: POSTGRES_PORT
              Value:
                Fn::ImportValue: !Sub '${PostgresDbStackName}-EndpointPort'
            - Name: POSTGRES_DATABASE
              Value:
                Fn::ImportValue: !Sub '${PostgresDbStackName}-DatabaseName'
            - Name: POSTGRES_USER
              Value:
                Fn::ImportValue: !Sub '${PostgresDbStackName}-MasterUserName'
            - Name: POSTGRES_PASSWORD_ENC
              Value: !Ref PostgresPasswordEnc
            - Name: REDIS_HOST
              Value:
                Fn::ImportValue: !Sub '${RedisStackName}-PrimaryAddress'
            - Name: REDIS_PORT
              Value:
                Fn::ImportValue: !Sub '${RedisStackName}-PrimaryPort'
            - Name: REDIS_DB_NUM
              Value: !Ref RedisDatabaseNumber
            - Name: GOOGLE_OAUTH_CLIENT_SECRET_ENC
              Value: !Ref GoogleOAuthClientSecretEnc
            - Name: AIRFLOW__WEBSERVER__AUTHENTICATE
              Value: True
            - Name: AIRFLOW__WEBSERVER__AUTH_BACKEND
              Value: airflow.contrib.auth.backends.google_auth
            - Name: AIRFLOW__GOOGLE__CLIENT_ID
              Value: !Ref GoogleOAuthClientId
            - Name: AIRFLOW__GOOGLE__OAUTH_CALLBACK_ROUTE
              Value: !Ref GoogleOAuthCallback
            - Name: AIRFLOW__GOOGLE__DOMAIN
              Value: !Ref GoogleOAuthDomain
            - Name: GUNICORN_CMD_ARGS
              Value: '--forwarded-allow-ips *'
            - Name: AIRFLOW__SMTP__SMTP_USER
              Value: !Ref SMTPUser
            - Name: SMTP_PASSWORD_ENC
              Value: !Ref SMTPPasswordEnc
            - Name: AIRFLOW__SMTP__SMTP_HOST
              Value: !Ref SMTPHost
            - Name: AIRFLOW__SMTP__SMTP_PORT
              Value: !Ref SMTPPort
            - Name: AIRFLOW__SMTP__SMTP_STARTTLS
              Value: !Ref SMTPStartTLS
            - Name: AIRFLOW__SMTP__SMTP_SSL
              Value: !Ref SMTPSSL
            - Name: AIRFLOW__SMTP__SMTP_MAIL_FROM
              Value: !Ref SMTPFrom
  Service:
    Type: AWS::ECS::Service
    DependsOn:
      - ListenerRule
    Properties:
      ServiceName: !Ref AppName
      Role:
         Fn::ImportValue: !Sub '${EcsStackName}-EcsServiceRole'
      TaskDefinition: !Ref TaskDefinition
      DesiredCount: !Ref AppDesiredCount
      LoadBalancers:
        - TargetGroupArn: !Ref TargetGroup
          ContainerName: !Ref AppName
          ContainerPort: !Ref AppContainerPort
      Cluster:
        Fn::ImportValue: !Sub '${EcsStackName}-ClusterName'
      PlacementStrategies:
        - Field: attribute:ecs.availability-zone
          Type: spread
        - Field: instanceId
          Type: spread
  ScalableTarget:
    Type: AWS::ApplicationAutoScaling::ScalableTarget
    Properties:
      MinCapacity: !Ref AppMinCount
      MaxCapacity: !Ref AppMaxCount
      ResourceId: !Join
        - /
        - - service
          - Fn::ImportValue: !Sub '${EcsStackName}-ClusterName'
          - !GetAtt Service.Name
      RoleARN: !Ref EcsAutoScaleRoleArn
      ScalableDimension: ecs:service:DesiredCount
      ServiceNamespace: ecs
  ScaleUpPolicy:
    Type: AWS::ApplicationAutoScaling::ScalingPolicy
    Properties:
      PolicyName: !Join
        - '-'
        - - !GetAtt Service.Name
          - ScaleUpPolicy
      PolicyType: StepScaling
      ScalingTargetId: !Ref ScalableTarget
      StepScalingPolicyConfiguration:
        AdjustmentType: PercentChangeInCapacity
        Cooldown: 60
        MetricAggregationType: Average
        StepAdjustments:
          - MetricIntervalLowerBound: 0
            MetricIntervalUpperBound: 10
            ScalingAdjustment: 10
          - MetricIntervalLowerBound: 10
            ScalingAdjustment: 30
  ScaleDownPolicy:
    Type: AWS::ApplicationAutoScaling::ScalingPolicy
    Properties:
      PolicyName: !Join
        - '-'
        - - !GetAtt Service.Name
          - ScaleDownPolicy
      PolicyType: StepScaling
      ScalingTargetId: !Ref ScalableTarget
      StepScalingPolicyConfiguration:
        AdjustmentType: PercentChangeInCapacity
        Cooldown: 60
        MetricAggregationType: Average
        StepAdjustments:
          - MetricIntervalLowerBound: -10
            MetricIntervalUpperBound: 0
            ScalingAdjustment: -10
          - MetricIntervalUpperBound: -10
            ScalingAdjustment: -30
  CpuUtilAlarmHigh:
    Type: AWS::CloudWatch::Alarm
    Properties:
      AlarmDescription: Cpu utilization alarm for ECS service for high cpu usage
      AlarmActions:
        - !Ref ScaleUpPolicy
      MetricName: CPUUtilization
      Namespace: AWS/ECS
      Statistic: Average
      Period: '60'
      EvaluationPeriods: '2'
      Threshold: !Ref AutoScaleHighThreshold
      ComparisonOperator: GreaterThanThreshold
      Dimensions:
        - Name: ClusterName
          Value:
            Fn::ImportValue: !Sub '${EcsStackName}-ClusterName'
        - Name: ServiceName
          Value: !GetAtt Service.Name
  CpuUtilAlarmLow:
    Type: AWS::CloudWatch::Alarm
    Properties:
      AlarmDescription: Cpu utilization alarm for ECS service for low cpu usage
      AlarmActions:
        - !Ref ScaleDownPolicy
      MetricName: CPUUtilization
      Namespace: AWS/ECS
      Statistic: Average
      Period: '60'
      EvaluationPeriods: '2'
      Threshold: !Ref AutoScaleLowThreshold
      ComparisonOperator: LessThanThreshold
      Dimensions:
        - Name: ClusterName
          Value:
            Fn::ImportValue: !Sub '${EcsStackName}-ClusterName'
        - Name: ServiceName
          Value: !GetAtt Service.Name
Outputs:
  Service:
    Description: The name of the ECS service created
    Value: !GetAtt Service.Name
  TaskFamily:
    Description: The family of the task created for the service
    Value: !Ref AWS::StackName
  TaskArn:
    Description: The ARN of the task created for the service
    Value: !Ref TaskDefinition
  URL:
    Description: The URL at which the service is available
    Value: !Sub 'https://${DNSRecord}/admin/'